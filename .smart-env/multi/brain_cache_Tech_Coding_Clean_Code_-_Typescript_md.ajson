
"SmartSource:brain cache/Tech/Coding/Clean Code - Typescript.md": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md","path":"brain cache/Tech/Coding/Clean Code - Typescript.md","embeddings":{"TaylorAI/bge-micro-v2":{"vec":[-0.09875320643186569,-0.01469616312533617,0.006401814520359039,-0.06896057724952698,-0.033010318875312805,0.028576957061886787,-0.0194742102175951,0.01703590713441372,-0.04070928320288658,-0.004611509386450052,-0.03969184681773186,0.020896725356578827,-0.004751437809318304,0.07000631093978882,-0.02119382470846176,0.046287741512060165,-0.02543714828789234,0.044837042689323425,-0.015996679663658142,-0.018983466550707817,0.13251212239265442,0.012111750431358814,0.009260274469852448,0.014557365328073502,0.01539168506860733,0.02455284632742405,0.0006741882534697652,-0.06731336563825607,-0.012431948445737362,-0.18403121829032898,-0.04030132666230202,-0.020702192559838295,0.03130209445953369,-0.053353797644376755,-0.007161738350987434,-0.024633120745420456,-0.05932609364390373,0.05282708257436752,-0.087040975689888,0.058542683720588684,-0.03613046929240227,0.0002677099546417594,0.034942008554935455,-0.03939271345734596,-0.022262686863541603,-0.04586706683039665,-0.03898865729570389,-0.039513468742370605,0.005374701227992773,-0.030611902475357056,-0.05199335888028145,-0.033794086426496506,-0.06232091411948204,0.02050110511481762,0.017812270671129227,0.024096334353089333,0.02419004589319229,0.052491702139377594,0.033243510872125626,0.03278674930334091,0.04189573973417282,0.040332864969968796,-0.14675182104110718,0.1596011072397232,0.09631453454494476,0.09686458110809326,-0.05966009199619293,-0.016500141471624374,0.05748092383146286,-0.02678755484521389,-0.04034154489636421,0.04379100725054741,-0.008703144267201424,0.0585084967315197,0.02065463922917843,-0.006985473912209272,0.02019426040351391,-0.013596356846392155,0.000952466856688261,-0.06814421713352203,-0.041922152042388916,-0.031114211305975914,0.020833823829889297,0.004490181338042021,-0.03834138810634613,-0.012725628912448883,-0.05187184736132622,0.028939343988895416,0.0688713937997818,-0.005315103568136692,0.031011495739221573,-0.0356716588139534,0.022691326215863228,0.010019159875810146,-0.015861956402659416,0.021603625267744064,-0.001687068841420114,0.07510956376791,-0.03760760650038719,0.12923555076122284,-0.04748032987117767,-0.015461878851056099,-0.004450701177120209,-0.031912658363580704,0.08093713968992233,-0.0407647080719471,0.05979485437273979,-0.005649326369166374,0.01734069176018238,-0.01846260577440262,-0.04336803779006004,-0.028859207406640053,0.00770194036886096,-0.047480449080467224,0.03328465297818184,0.03491033986210823,0.008114668540656567,0.00005694276114809327,0.04341735690832138,-0.00496948417276144,-0.02592702955007553,0.03648791462182999,0.03326547145843506,-0.06708144396543503,0.032075416296720505,0.004497505258768797,0.0071030110120773315,0.07637465745210648,0.007863310165703297,0.033314839005470276,0.03927676007151604,0.06133747100830078,-0.03300232067704201,0.042710885405540466,-0.013143076561391354,-0.008392730727791786,-0.03600186109542847,0.03983137756586075,0.020661037415266037,-0.01957651413977146,-0.042882561683654785,0.021866844967007637,0.03689122200012207,-0.07169272005558014,-0.06997836381196976,0.02318625897169113,-0.03021148592233658,0.03603138402104378,-0.08449522405862808,-0.05870199203491211,0.030990373343229294,0.09753347188234329,-0.01564234308898449,0.0006280772504396737,0.020893288776278496,0.03380890563130379,0.03562881425023079,0.05076250433921814,-0.06424085795879364,-0.011181374080479145,0.014587976969778538,0.004291272722184658,-0.041532039642333984,0.06762749701738358,-0.014507916755974293,-0.030129961669445038,-0.040869612246751785,0.023635780438780785,0.031785301864147186,-0.004154447466135025,-0.02265085279941559,-0.027037691324949265,0.006595721002668142,-0.0021390863694250584,0.05461554229259491,-0.04024885594844818,-0.08586184680461884,0.0023778933100402355,0.06290540844202042,0.0020323051139712334,0.00757139315828681,-0.06975823640823364,-0.07574384659528732,0.018764380365610123,0.0714605376124382,-0.0609748438000679,-0.007712529972195625,-0.059347257018089294,0.028965219855308533,0.07795651257038116,-0.061416637152433395,-0.059552110731601715,0.04439939931035042,0.05704296752810478,-0.03092452697455883,0.002907870337367058,-0.03844073787331581,-0.07802802324295044,0.005143499001860619,0.0063724210485816,0.0006904411711730063,-0.021995069459080696,-0.01382698304951191,0.05468130111694336,-0.08095899969339371,0.011755530722439289,0.0020956946536898613,-0.051641855388879776,0.07081257551908493,0.08535166084766388,-0.08468114584684372,0.010366113856434822,0.049526069313287735,0.01363743469119072,0.028553420677781105,-0.027346454560756683,0.044166646897792816,0.04324929416179657,0.003809447167441249,0.050376828759908676,0.037414003163576126,-0.035918157547712326,-0.08317461609840393,-0.19935666024684906,0.014076892286539078,0.0021357133518904448,-0.004435091279447079,0.04077591374516487,-0.09205100685358047,0.02529098093509674,-0.022569531574845314,-0.03141361474990845,0.0713854506611824,0.10096122324466705,0.019760433584451675,-0.03838692232966423,-0.04556302726268768,-0.0484786257147789,-0.017428230494260788,0.06194722279906273,-0.031346265226602554,-0.08248234540224075,0.002421022392809391,0.004964984487742186,0.02688622660934925,-0.009594499133527279,-0.08279502391815186,0.051712214946746826,-0.055313773453235626,0.1618528813123703,-0.03950544819235802,0.11166278272867203,0.05544082075357437,0.034319084137678146,0.005570015870034695,0.09681316465139389,-0.1020822823047638,0.005579967517405748,0.028504470363259315,0.004817844368517399,0.0445428304374218,0.002765584271401167,-0.01974538341164589,-0.06983532011508942,-0.001882753917016089,-0.011054511182010174,-0.09693443775177002,-0.050885576754808426,-0.018380217254161835,-0.08204874396324158,-0.08628137409687042,-0.06103470176458359,-0.03218042105436325,0.040074028074741364,-0.0014085079310461879,-0.0013875209260731936,0.054052889347076416,-0.02159619890153408,0.0028175469487905502,-0.025492994114756584,-0.01362316682934761,0.00039758338243700564,0.026175491511821747,0.02104664035141468,0.015006529167294502,0.007465698756277561,-0.025298984721302986,0.023250624537467957,0.023340605199337006,0.06174629554152489,-0.034187547862529755,0.05428122729063034,-0.021343490108847618,0.020250733941793442,0.13409993052482605,0.0014880816452205181,-0.02878729999065399,-0.02377653680741787,0.024031763896346092,-0.04485339671373367,0.0014178057899698615,0.015319283120334148,-0.023727785795927048,0.01612614281475544,-0.017996449023485184,0.035850245505571365,0.024257434532046318,0.041862111538648605,0.016096793115139008,-0.02574889361858368,-0.020047606900334358,0.018135325983166695,0.011295279487967491,0.012604284100234509,0.0035377987660467625,-0.04717814549803734,-0.0687176063656807,0.06768564879894257,0.020089546218514442,-0.24227015674114227,-0.03652317821979523,0.023211855441331863,0.026624219492077827,-0.008256147615611553,0.02420716919004917,0.05324358120560646,-0.054243508726358414,0.011891726404428482,0.009477060288190842,0.0016006209189072251,0.05512247607111931,0.02021852135658264,-0.010229618288576603,0.04178713634610176,0.013382629491388798,0.05640432983636856,-0.07149668782949448,0.07682690024375916,-0.08141350001096725,0.014027590863406658,-0.01713039167225361,0.23261210322380066,-0.036047086119651794,0.04794514551758766,0.03243362903594971,-0.017680536955595016,0.06292728334665298,0.07710754871368408,-0.021461475640535355,0.011478152126073837,0.015126816928386688,0.09398994594812393,-0.01736527308821678,-0.02944321557879448,0.0481177382171154,-0.025706052780151367,-0.03601576015353203,0.003272854257375002,-0.019427523016929626,-0.026982693001627922,0.006467918399721384,0.014847112819552422,-0.026218555867671967,0.08914218842983246,-0.024447305127978325,-0.05357708781957626,-0.1127961203455925,0.0036889114417135715,0.014331173151731491,-0.049507349729537964,0.025930015370249748,-0.004569778218865395,-0.0284107755869627,0.053245559334754944,0.045220933854579926,-0.005366205703467131,-0.01344294659793377,-0.054425667971372604,0.020440272986888885,0.06199175864458084,0.007319422904402018,0.03307695314288139,0.1125195100903511,-0.039658404886722565],"tokens":474}},"history":[{"blocks":{"brain cache/Tech/Coding/Clean Code - Typescript.md#":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Table of Contents":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Introduction":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Variables#Use meaningful variable names":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Variables#Use pronounceable variable names":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Variables#Use the same vocabulary for the same type of variable":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Variables#Use searchable names{1}":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Variables#Use searchable names{2}":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Variables#Use explanatory variables":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Variables#Avoid Mental Mapping":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Variables#Don't add unneeded context":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Variables#Use default arguments instead of short circuiting or conditionals":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Variables#Use enum to document the intent":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Function arguments (2 or fewer ideally)":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Functions should do one thing{1}":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Functions should do one thing{2}":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Function names should say what they do":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Functions should only be one level of abstraction":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Remove duplicate code":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Remove duplicate code{1}":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Remove duplicate code{3}":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Remove duplicate code{4}":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Remove duplicate code{5}":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Remove duplicate code{6}":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Set default objects with Object.assign or destructuring":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Don't use flags as function parameters":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Avoid Side Effects (part 1)":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Avoid Side Effects (part 2){1}":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Avoid Side Effects (part 2){3}":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Avoid Side Effects (part 2){5}":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Avoid Side Effects (part 2){6}":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Avoid Side Effects (part 2){7}":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Avoid Side Effects (part 2){8}":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Don't write to global functions{1}":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Don't write to global functions{2}":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Favor functional programming over imperative programming":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Encapsulate conditionals":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Avoid negative conditionals":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Avoid conditionals{1}":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Avoid conditionals{2}":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Avoid type checking":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Don't over-optimize{1}":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Don't over-optimize{2}":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Remove dead code":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Use iterators and generators":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Objects and Data Structures#Use getters and setters":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Objects and Data Structures#Make objects have private/protected members":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Objects and Data Structures#Prefer immutability":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Objects and Data Structures#type vs. interface":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Classes#Classes should be small":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Classes#High cohesion and low coupling":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Classes#Prefer composition over inheritance{1}":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Classes#Prefer composition over inheritance{2}":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Classes#Use method chaining":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#SOLID#Single Responsibility Principle (SRP){1}":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#SOLID#Single Responsibility Principle (SRP){2}":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#SOLID#Open/Closed Principle (OCP)":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#SOLID#Liskov Substitution Principle (LSP){1}":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#SOLID#Liskov Substitution Principle (LSP){3}":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#SOLID#Liskov Substitution Principle (LSP){4}":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#SOLID#Interface Segregation Principle (ISP)":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#SOLID#Dependency Inversion Principle (DIP)":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#SOLID#Dependency Inversion Principle (DIP){1}":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#SOLID#Dependency Inversion Principle (DIP){2}":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Testing":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Testing{1}":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Testing#The three laws of TDD":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Testing#F.I.R.S.T. rules":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Testing#Single concept per test":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Testing#The name of the test should reveal its intention":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Concurrency#Prefer promises vs callbacks":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Concurrency#Async/Await are even cleaner than Promises":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Error Handling":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Error Handling#Always use Error for throwing or rejecting":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Error Handling#Don't ignore caught errors{1}":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Error Handling#Don't ignore caught errors{2}":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Error Handling#Don't ignore rejected promises":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Formatting{1}":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Formatting{2}":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Formatting#Migrating from TSLint to ESLint":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Formatting#Use consistent capitalization":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Formatting#Function callers and callees should be close":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Formatting#Organize imports":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Formatting#Organize imports{1}":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Formatting#Use typescript aliases":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Comments":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Comments#Prefer self explanatory code instead of comments":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Comments#Don't leave commented out code in your codebase":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Comments#Don't have journal comments":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Comments#Avoid positional markers":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Comments#TODO comments":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Translations":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Translations{1}":true,"brain cache/Tech/Coding/Clean Code - Typescript.md#Translations{2}":true},"mtime":1723374276641,"size":79573,"hash":"5c14d53c799bf9dcbf3ff1dd7094945198148cf787c45c1fbf19a1a560212d1a"}],"class_name":"SmartSource","outlinks":[{"title":"clean-code-javascript","target":"https://github.com/ryanmcdermott/clean-code-javascript","line":2},{"title":"Introduction","target":"#introduction","line":6},{"title":"Variables","target":"#variables","line":7},{"title":"Functions","target":"#functions","line":8},{"title":"#Objects and Data Structures","target":"#Objects and Data Structures","line":9},{"title":"Classes","target":"#classes","line":10},{"title":"SOLID","target":"#solid","line":11},{"title":"Testing","target":"#testing","line":12},{"title":"Concurrency","target":"#concurrency","line":13},{"title":"#Error Handling","target":"#Error Handling","line":14},{"title":"Formatting","target":"#formatting","line":15},{"title":"Comments","target":"#comments","line":16},{"title":"Translations","target":"#translations","line":17},{"title":"Humorous image of software quality estimation as a count of how many expletives\nyou shout when reading code","target":"https://www.osnews.com/images/comics/wtfm.jpg","line":20},{"title":"*Clean Code*","target":"https://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882","line":24},{"title":"readable, reusable, and refactorable","target":"https://github.com/ryanmcdermott/3rs-of-software-architecture","line":26},{"title":"⬆ back to top","target":"#table-of-contents","line":46},{"title":"⬆ back to top","target":"#table-of-contents","line":71},{"title":"⬆ back to top","target":"#table-of-contents","line":97},{"title":"⬆ back to top","target":"#table-of-contents","line":115},{"title":"ESLint","target":"https://typescript-eslint.io/","line":119},{"title":"⬆ back to top","target":"#table-of-contents","line":137},{"title":"⬆ back to top","target":"#table-of-contents","line":161},{"title":"⬆ back to top","target":"#table-of-contents","line":184},{"title":"⬆ back to top","target":"#table-of-contents","line":218},{"title":"⬆ back to top","target":"#table-of-contents","line":241},{"title":"⬆ back to top","target":"#table-of-contents","line":294},{"title":"destructuring","target":"https://basarat.gitbook.io/typescript/future-javascript/destructuring","line":309},{"title":"type aliases","target":"https://www.typescriptlang.org/docs/handbook/advanced-types.html#type-aliases","line":345},{"title":"⬆ back to top","target":"#table-of-contents","line":363},{"title":"⬆ back to top","target":"#table-of-contents","line":395},{"title":"⬆ back to top","target":"#table-of-contents","line":423},{"title":"⬆ back to top","target":"#table-of-contents","line":491},{"title":"SOLID","target":"#solid","line":504},{"title":"⬆ back to top","target":"#table-of-contents","line":601},{"title":"this","target":"https://stackoverflow.com/questions/32925460/object-spread-vs-object-assign","line":657},{"title":"`--strictNullChecks`","target":"https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-0.html#--strictnullchecks","line":672},{"title":"⬆ back to top","target":"#table-of-contents","line":674},{"title":"⬆ back to top","target":"#table-of-contents","line":705},{"title":"⬆ back to top","target":"#table-of-contents","line":747},{"title":"pure function","target":"https://en.wikipedia.org/wiki/Pure_function","line":761},{"title":"great libraries","target":"https://github.com/immutable-js/immutable-js","line":763},{"title":"⬆ back to top","target":"#table-of-contents","line":781},{"title":"⬆ back to top","target":"#table-of-contents","line":815},{"title":"⬆ back to top","target":"#table-of-contents","line":870},{"title":"⬆ back to top","target":"#table-of-contents","line":894},{"title":"⬆ back to top","target":"#table-of-contents","line":922},{"title":"⬆ back to top","target":"#table-of-contents","line":987},{"title":"⬆ back to top","target":"#table-of-contents","line":1017},{"title":"resources","target":"https://github.com/petkaantonov/bluebird/wiki/Optimization-killers","line":1021},{"title":"⬆ back to top","target":"#table-of-contents","line":1041},{"title":"⬆ back to top","target":"#table-of-contents","line":1074},{"title":"itiriri","target":"https://www.npmjs.com/package/itiriri","line":1137},{"title":"itiriri-async","target":"https://www.npmjs.com/package/itiriri-async","line":1138},{"title":"⬆ back to top","target":"#table-of-contents","line":1157},{"title":"⬆ back to top","target":"#table-of-contents","line":1223},{"title":"⬆ back to top","target":"#table-of-contents","line":1266},{"title":"mapped types","target":"https://www.typescriptlang.org/docs/handbook/advanced-types.html#mapped-types","line":1271},{"title":"TypeScript 3.4 is a bit easier","target":"https://github.com/microsoft/TypeScript/wiki/What's-new-in-TypeScript#improvements-for-readonlyarray-and-readonly-tuples","line":1312},{"title":"const assertions","target":"https://github.com/microsoft/TypeScript/wiki/What's-new-in-TypeScript#const-assertions","line":1320},{"title":"⬆ back to top","target":"#table-of-contents","line":1364},{"title":"answer","target":"https://stackoverflow.com/questions/37233735/typescript-interfaces-vs-types/54101543#54101543","line":1369},{"title":"⬆ back to top","target":"#table-of-contents","line":1422},{"title":"⬆ back to top","target":"#table-of-contents","line":1466},{"title":"⬆ back to top","target":"#table-of-contents","line":1546},{"title":"Design Patterns","target":"https://en.wikipedia.org/wiki/Design_Patterns","line":1550},{"title":"⬆ back to top","target":"#table-of-contents","line":1615},{"title":"⬆ back to top","target":"#table-of-contents","line":1697},{"title":"⬆ back to top","target":"#table-of-contents","line":1752},{"title":"⬆ back to top","target":"#table-of-contents","line":1845},{"title":"⬆ back to top","target":"#table-of-contents","line":1962},{"title":"⬆ back to top","target":"#table-of-contents","line":2043},{"title":"InversifyJs","target":"https://www.npmjs.com/package/inversify","line":2055},{"title":"⬆ back to top","target":"#table-of-contents","line":2140},{"title":"coverage tool","target":"https://github.com/gotwarlost/istanbul","line":2146},{"title":"plenty of good JS test frameworks","target":"http://jstherightway.org/#testing-tools","line":2148},{"title":"⬆ back to top","target":"#table-of-contents","line":2158},{"title":"⬆ back to top","target":"#table-of-contents","line":2174},{"title":"⬆ back to top","target":"#table-of-contents","line":2224},{"title":"⬆ back to top","target":"#table-of-contents","line":2258},{"title":"`util.promisify`","target":"https://nodejs.org/dist/latest-v8.x/docs/api/util.html#util_util_promisify_original","line":2266},{"title":"es6-promisify","target":"https://www.npmjs.com/package/es6-promisify","line":2266},{"title":"pify","target":"https://www.npmjs.com/package/pify","line":2266},{"title":"⬆ back to top","target":"#table-of-contents","line":2329},{"title":"⬆ back to top","target":"#table-of-contents","line":2377},{"title":"debugging more painful","target":"https://basarat.gitbook.io/typescript/type-system/exceptions#always-use-error","line":2389},{"title":"original post","target":"https://medium.com/@dhruvrajvanshi/making-exceptions-type-safe-in-typescript-c4d200ee78e9","line":2442},{"title":"⬆ back to top","target":"#table-of-contents","line":2444},{"title":"⬆ back to top","target":"#table-of-contents","line":2480},{"title":"⬆ back to top","target":"#table-of-contents","line":2521},{"title":"ESLint","target":"https://typescript-eslint.io/","line":2527},{"title":"ESLint Config Airbnb","target":"https://www.npmjs.com/package/eslint-config-airbnb-typescript","line":2529},{"title":"ESLint Base Style Config","target":"https://www.npmjs.com/package/eslint-plugin-base-style-config","line":2531},{"title":"Prettier","target":"https://github.com/prettier/prettier","line":2533},{"title":"ESLint + Prettier","target":"https://www.npmjs.com/package/eslint-config-prettier","line":2533},{"title":"TypeScript StyleGuide and Coding Conventions","target":"https://basarat.gitbook.io/typescript/styleguide","line":2535},{"title":"⬆ back to top","target":"#table-of-contents","line":2584},{"title":"⬆ back to top","target":"#table-of-contents","line":2673},{"title":"⬆ back to top","target":"#table-of-contents","line":2722},{"title":"⬆ back to top","target":"#table-of-contents","line":2756},{"title":"⬆ back to top","target":"#table-of-contents","line":2783},{"title":"⬆ back to top","target":"#table-of-contents","line":2809},{"title":"⬆ back to top","target":"#table-of-contents","line":2837},{"title":"folding regions","target":"https://code.visualstudio.com/updates/v1_17#_folding-regions","line":2842},{"title":"⬆ back to top","target":"#table-of-contents","line":2899},{"title":"⬆ back to top","target":"#table-of-contents","line":2927},{"title":"vitorfreitas/clean-code-typescript","target":"https://github.com/vitorfreitas/clean-code-typescript","line":2932},{"title":"br","target":"https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Brazil.png","line":2932},{"title":"cn","target":"https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/China.png","line":2933},{"title":"beginor/clean-code-typescript","target":"https://github.com/beginor/clean-code-typescript","line":2934},{"title":"pipiliang/clean-code-typescript","target":"https://github.com/pipiliang/clean-code-typescript","line":2935},{"title":"ralflorent/clean-code-typescript","target":"https://github.com/ralflorent/clean-code-typescript","line":2936},{"title":"fr","target":"https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/France.png","line":2936},{"title":"mheob/clean-code-typescript","target":"https://github.com/mheob/clean-code-typescript","line":2937},{"title":"de","target":"https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Germany.png","line":2937},{"title":"MSakamaki/clean-code-typescript","target":"https://github.com/MSakamaki/clean-code-typescript","line":2938},{"title":"ja","target":"https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Japan.png","line":2938},{"title":"738/clean-code-typescript","target":"https://github.com/738/clean-code-typescript","line":2939},{"title":"ko","target":"https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/South-Korea.png","line":2939},{"title":"Real001/clean-code-typescript","target":"https://github.com/Real001/clean-code-typescript","line":2940},{"title":"ru","target":"https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Russia.png","line":2940},{"title":"3xp1o1t/clean-code-typescript","target":"https://github.com/3xp1o1t/clean-code-typescript","line":2941},{"title":"es","target":"https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Spain.png","line":2941},{"title":"ozanhonamlioglu/clean-code-typescript","target":"https://github.com/ozanhonamlioglu/clean-code-typescript","line":2942},{"title":"tr","target":"https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Turkey.png","line":2942},{"title":"hoangsetup/clean-code-typescript","target":"https://github.com/hoangsetup/clean-code-typescript","line":2943},{"title":"vi","target":"https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Vietnam.png","line":2943},{"title":"discussion","target":"https://github.com/labs42io/clean-code-typescript/issues/15","line":2946},{"title":"⬆ back to top","target":"#table-of-contents","line":2949}]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#","embeddings":{},"text":null,"length":140,"class_name":"SmartBlock","heading":null,"lines":[0,2]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Table of Contents": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Table of Contents","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Table of Contents","embeddings":{},"text":null,"length":353,"class_name":"SmartBlock","heading":"Table of Contents","lines":[3,16]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Introduction": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Introduction","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Introduction","embeddings":{},"text":null,"length":1570,"class_name":"SmartBlock","heading":"Introduction","lines":[17,46]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Variables#Use meaningful variable names": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Variables#Use meaningful variable names","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Variables#Use meaningful variable names","embeddings":{},"text":null,"length":349,"class_name":"SmartBlock","heading":"Use meaningful variable names","lines":[49,71]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Variables#Use pronounceable variable names": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Variables#Use pronounceable variable names","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Variables#Use pronounceable variable names","embeddings":{},"text":null,"length":337,"class_name":"SmartBlock","heading":"Use pronounceable variable names","lines":[72,97]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Variables#Use the same vocabulary for the same type of variable": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Variables#Use the same vocabulary for the same type of variable","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Variables#Use the same vocabulary for the same type of variable","embeddings":{},"text":null,"length":197,"class_name":"SmartBlock","heading":"Use the same vocabulary for the same type of variable","lines":[98,115]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Variables#Use searchable names{1}": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Variables#Use searchable names{1}","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Variables#Use searchable names{1}","embeddings":{},"text":null,"length":392,"class_name":"SmartBlock","heading":"Use searchable names","lines":[116,118]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Variables#Use searchable names{2}": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Variables#Use searchable names{2}","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Variables#Use searchable names{2}","embeddings":{},"text":null,"length":296,"class_name":"SmartBlock","heading":"Use searchable names","lines":[119,137]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Variables#Use explanatory variables": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Variables#Use explanatory variables","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Variables#Use explanatory variables","embeddings":{},"text":null,"length":290,"class_name":"SmartBlock","heading":"Use explanatory variables","lines":[138,161]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Variables#Avoid Mental Mapping": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Variables#Avoid Mental Mapping","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Variables#Avoid Mental Mapping","embeddings":{},"text":null,"length":319,"class_name":"SmartBlock","heading":"Avoid Mental Mapping","lines":[162,184]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Variables#Don't add unneeded context": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Variables#Don't add unneeded context","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Variables#Don't add unneeded context","embeddings":{},"text":null,"length":505,"class_name":"SmartBlock","heading":"Don't add unneeded context","lines":[185,218]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Variables#Use default arguments instead of short circuiting or conditionals": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Variables#Use default arguments instead of short circuiting or conditionals","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Variables#Use default arguments instead of short circuiting or conditionals","embeddings":{},"text":null,"length":291,"class_name":"SmartBlock","heading":"Use default arguments instead of short circuiting or conditionals","lines":[219,241]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Variables#Use enum to document the intent": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Variables#Use enum to document the intent","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Variables#Use enum to document the intent","embeddings":{},"text":null,"length":822,"class_name":"SmartBlock","heading":"Use enum to document the intent","lines":[242,294]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Function arguments (2 or fewer ideally)": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Function arguments (2 or fewer ideally)","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Function arguments (2 or fewer ideally)","embeddings":{},"text":null,"length":2146,"class_name":"SmartBlock","heading":"Function arguments (2 or fewer ideally)","lines":[297,363]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Functions should do one thing{1}": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Functions should do one thing{1}","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Functions should do one thing{1}","embeddings":{},"text":null,"length":371,"class_name":"SmartBlock","heading":"Functions should do one thing","lines":[364,366]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Functions should do one thing{2}": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Functions should do one thing{2}","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Functions should do one thing{2}","embeddings":{},"text":null,"length":505,"class_name":"SmartBlock","heading":"Functions should do one thing","lines":[367,395]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Function names should say what they do": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Function names should say what they do","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Function names should say what they do","embeddings":{},"text":null,"length":366,"class_name":"SmartBlock","heading":"Function names should say what they do","lines":[396,423]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Functions should only be one level of abstraction": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Functions should only be one level of abstraction","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Functions should only be one level of abstraction","embeddings":{},"text":null,"length":1192,"class_name":"SmartBlock","heading":"Functions should only be one level of abstraction","lines":[424,491]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Remove duplicate code": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Remove duplicate code","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Remove duplicate code","embeddings":{},"text":null,"length":475,"class_name":"SmartBlock","heading":"Remove duplicate code","lines":[492,500]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Remove duplicate code{1}": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Remove duplicate code{1}","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Remove duplicate code{1}","embeddings":{},"text":null,"length":358,"class_name":"SmartBlock","heading":"Remove duplicate code","lines":[501,501]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Remove duplicate code{3}": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Remove duplicate code{3}","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Remove duplicate code{3}","embeddings":{},"text":null,"length":348,"class_name":"SmartBlock","heading":"Remove duplicate code","lines":[502,503]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Remove duplicate code{4}": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Remove duplicate code{4}","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Remove duplicate code{4}","embeddings":{},"text":null,"length":1591,"class_name":"SmartBlock","heading":"Remove duplicate code","lines":[504,597]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Remove duplicate code{5}": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Remove duplicate code{5}","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Remove duplicate code{5}","embeddings":{},"text":null,"length":440,"class_name":"SmartBlock","heading":"Remove duplicate code","lines":[598,598]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Remove duplicate code{6}": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Remove duplicate code{6}","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Remove duplicate code{6}","embeddings":{},"text":null,"length":39,"class_name":"SmartBlock","heading":"Remove duplicate code","lines":[599,601]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Set default objects with Object.assign or destructuring": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Set default objects with Object.assign or destructuring","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Set default objects with Object.assign or destructuring","embeddings":{},"text":null,"length":1927,"class_name":"SmartBlock","heading":"Set default objects with Object.assign or destructuring","lines":[602,674]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Don't use flags as function parameters": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Don't use flags as function parameters","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Don't use flags as function parameters","embeddings":{},"text":null,"length":530,"class_name":"SmartBlock","heading":"Don't use flags as function parameters","lines":[675,705]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Avoid Side Effects (part 1)": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Avoid Side Effects (part 1)","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Avoid Side Effects (part 1)","embeddings":{},"text":null,"length":1407,"class_name":"SmartBlock","heading":"Avoid Side Effects (part 1)","lines":[706,747]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Avoid Side Effects (part 2){1}": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Avoid Side Effects (part 2){1}","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Avoid Side Effects (part 2){1}","embeddings":{},"text":null,"length":489,"class_name":"SmartBlock","heading":"Avoid Side Effects (part 2)","lines":[748,750]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Avoid Side Effects (part 2){3}": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Avoid Side Effects (part 2){3}","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Avoid Side Effects (part 2){3}","embeddings":{},"text":null,"length":366,"class_name":"SmartBlock","heading":"Avoid Side Effects (part 2)","lines":[751,752]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Avoid Side Effects (part 2){5}": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Avoid Side Effects (part 2){5}","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Avoid Side Effects (part 2){5}","embeddings":{},"text":null,"length":544,"class_name":"SmartBlock","heading":"Avoid Side Effects (part 2)","lines":[753,754]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Avoid Side Effects (part 2){6}": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Avoid Side Effects (part 2){6}","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Avoid Side Effects (part 2){6}","embeddings":{},"text":null,"length":562,"class_name":"SmartBlock","heading":"Avoid Side Effects (part 2)","lines":[755,761]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Avoid Side Effects (part 2){7}": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Avoid Side Effects (part 2){7}","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Avoid Side Effects (part 2){7}","embeddings":{},"text":null,"length":340,"class_name":"SmartBlock","heading":"Avoid Side Effects (part 2)","lines":[762,762]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Avoid Side Effects (part 2){8}": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Avoid Side Effects (part 2){8}","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Avoid Side Effects (part 2){8}","embeddings":{},"text":null,"length":301,"class_name":"SmartBlock","heading":"Avoid Side Effects (part 2)","lines":[763,781]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Don't write to global functions{1}": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Don't write to global functions{1}","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Don't write to global functions{1}","embeddings":{},"text":null,"length":701,"class_name":"SmartBlock","heading":"Don't write to global functions","lines":[782,784]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Don't write to global functions{2}": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Don't write to global functions{2}","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Don't write to global functions{2}","embeddings":{},"text":null,"length":482,"class_name":"SmartBlock","heading":"Don't write to global functions","lines":[785,815]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Favor functional programming over imperative programming": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Favor functional programming over imperative programming","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Favor functional programming over imperative programming","embeddings":{},"text":null,"length":832,"class_name":"SmartBlock","heading":"Favor functional programming over imperative programming","lines":[816,870]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Encapsulate conditionals": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Encapsulate conditionals","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Encapsulate conditionals","embeddings":{},"text":null,"length":332,"class_name":"SmartBlock","heading":"Encapsulate conditionals","lines":[871,894]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Avoid negative conditionals": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Avoid negative conditionals","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Avoid negative conditionals","embeddings":{},"text":null,"length":275,"class_name":"SmartBlock","heading":"Avoid negative conditionals","lines":[895,922]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Avoid conditionals{1}": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Avoid conditionals{1}","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Avoid conditionals{1}","embeddings":{},"text":null,"length":564,"class_name":"SmartBlock","heading":"Avoid conditionals","lines":[923,925]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Avoid conditionals{2}": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Avoid conditionals{2}","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Avoid conditionals{2}","embeddings":{},"text":null,"length":1049,"class_name":"SmartBlock","heading":"Avoid conditionals","lines":[926,987]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Avoid type checking": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Avoid type checking","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Avoid type checking","embeddings":{},"text":null,"length":730,"class_name":"SmartBlock","heading":"Avoid type checking","lines":[988,1017]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Don't over-optimize{1}": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Don't over-optimize{1}","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Don't over-optimize{1}","embeddings":{},"text":null,"length":346,"class_name":"SmartBlock","heading":"Don't over-optimize","lines":[1018,1020]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Don't over-optimize{2}": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Don't over-optimize{2}","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Don't over-optimize{2}","embeddings":{},"text":null,"length":352,"class_name":"SmartBlock","heading":"Don't over-optimize","lines":[1021,1041]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Remove dead code": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Remove dead code","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Remove dead code","embeddings":{},"text":null,"length":605,"class_name":"SmartBlock","heading":"Remove dead code","lines":[1042,1074]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Use iterators and generators": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Use iterators and generators","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Functions#Use iterators and generators","embeddings":{},"text":null,"length":1890,"class_name":"SmartBlock","heading":"Use iterators and generators","lines":[1075,1157]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Objects and Data Structures#Use getters and setters": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Objects and Data Structures#Use getters and setters","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Objects and Data Structures#Use getters and setters","embeddings":{},"text":null,"length":1491,"class_name":"SmartBlock","heading":"Use getters and setters","lines":[1160,1223]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Objects and Data Structures#Make objects have private/protected members": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Objects and Data Structures#Make objects have private/protected members","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Objects and Data Structures#Make objects have private/protected members","embeddings":{},"text":null,"length":591,"class_name":"SmartBlock","heading":"Make objects have private/protected members","lines":[1224,1266]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Objects and Data Structures#Prefer immutability": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Objects and Data Structures#Prefer immutability","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Objects and Data Structures#Prefer immutability","embeddings":{},"text":null,"length":2228,"class_name":"SmartBlock","heading":"Prefer immutability","lines":[1267,1364]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Objects and Data Structures#type vs. interface": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Objects and Data Structures#type vs. interface","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Objects and Data Structures#type vs. interface","embeddings":{},"text":null,"length":827,"class_name":"SmartBlock","heading":"type vs. interface","lines":[1365,1422]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Classes#Classes should be small": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Classes#Classes should be small","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Classes#Classes should be small","embeddings":{},"text":null,"length":1053,"class_name":"SmartBlock","heading":"Classes should be small","lines":[1425,1466]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Classes#High cohesion and low coupling": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Classes#High cohesion and low coupling","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Classes#High cohesion and low coupling","embeddings":{},"text":null,"length":2135,"class_name":"SmartBlock","heading":"High cohesion and low coupling","lines":[1467,1546]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Classes#Prefer composition over inheritance{1}": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Classes#Prefer composition over inheritance{1}","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Classes#Prefer composition over inheritance{1}","embeddings":{},"text":null,"length":436,"class_name":"SmartBlock","heading":"Prefer composition over inheritance","lines":[1547,1549]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Classes#Prefer composition over inheritance{2}": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Classes#Prefer composition over inheritance{2}","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Classes#Prefer composition over inheritance{2}","embeddings":{},"text":null,"length":1423,"class_name":"SmartBlock","heading":"Prefer composition over inheritance","lines":[1550,1615]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Classes#Use method chaining": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Classes#Use method chaining","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Classes#Use method chaining","embeddings":{},"text":null,"length":1600,"class_name":"SmartBlock","heading":"Use method chaining","lines":[1616,1697]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#SOLID#Single Responsibility Principle (SRP){1}": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#SOLID#Single Responsibility Principle (SRP){1}","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#SOLID#Single Responsibility Principle (SRP){1}","embeddings":{},"text":null,"length":589,"class_name":"SmartBlock","heading":"Single Responsibility Principle (SRP)","lines":[1700,1702]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#SOLID#Single Responsibility Principle (SRP){2}": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#SOLID#Single Responsibility Principle (SRP){2}","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#SOLID#Single Responsibility Principle (SRP){2}","embeddings":{},"text":null,"length":648,"class_name":"SmartBlock","heading":"Single Responsibility Principle (SRP)","lines":[1703,1752]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#SOLID#Open/Closed Principle (OCP)": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#SOLID#Open/Closed Principle (OCP)","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#SOLID#Open/Closed Principle (OCP)","embeddings":{},"text":null,"length":1786,"class_name":"SmartBlock","heading":"Open/Closed Principle (OCP)","lines":[1753,1845]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#SOLID#Liskov Substitution Principle (LSP){1}": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#SOLID#Liskov Substitution Principle (LSP){1}","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#SOLID#Liskov Substitution Principle (LSP){1}","embeddings":{},"text":null,"length":356,"class_name":"SmartBlock","heading":"Liskov Substitution Principle (LSP)","lines":[1846,1848]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#SOLID#Liskov Substitution Principle (LSP){3}": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#SOLID#Liskov Substitution Principle (LSP){3}","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#SOLID#Liskov Substitution Principle (LSP){3}","embeddings":{},"text":null,"length":410,"class_name":"SmartBlock","heading":"Liskov Substitution Principle (LSP)","lines":[1849,1850]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#SOLID#Liskov Substitution Principle (LSP){4}": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#SOLID#Liskov Substitution Principle (LSP){4}","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#SOLID#Liskov Substitution Principle (LSP){4}","embeddings":{},"text":null,"length":1856,"class_name":"SmartBlock","heading":"Liskov Substitution Principle (LSP)","lines":[1851,1962]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#SOLID#Interface Segregation Principle (ISP)": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#SOLID#Interface Segregation Principle (ISP)","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#SOLID#Interface Segregation Principle (ISP)","embeddings":{},"text":null,"length":1212,"class_name":"SmartBlock","heading":"Interface Segregation Principle (ISP)","lines":[1963,2043]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#SOLID#Dependency Inversion Principle (DIP)": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#SOLID#Dependency Inversion Principle (DIP)","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#SOLID#Dependency Inversion Principle (DIP)","embeddings":{},"text":null,"length":228,"class_name":"SmartBlock","heading":"Dependency Inversion Principle (DIP)","lines":[2044,2051]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#SOLID#Dependency Inversion Principle (DIP){1}": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#SOLID#Dependency Inversion Principle (DIP){1}","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#SOLID#Dependency Inversion Principle (DIP){1}","embeddings":{},"text":null,"length":499,"class_name":"SmartBlock","heading":"Dependency Inversion Principle (DIP)","lines":[2052,2052]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#SOLID#Dependency Inversion Principle (DIP){2}": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#SOLID#Dependency Inversion Principle (DIP){2}","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#SOLID#Dependency Inversion Principle (DIP){2}","embeddings":{},"text":null,"length":1926,"class_name":"SmartBlock","heading":"Dependency Inversion Principle (DIP)","lines":[2053,2140]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Testing": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Testing","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Testing","embeddings":{},"text":null,"length":508,"class_name":"SmartBlock","heading":"Testing","lines":[2141,2146]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Testing{1}": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Testing{1}","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Testing{1}","embeddings":{},"text":null,"length":529,"class_name":"SmartBlock","heading":"Testing","lines":[2147,2147]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Testing#The three laws of TDD": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Testing#The three laws of TDD","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Testing#The three laws of TDD","embeddings":{},"text":null,"length":373,"class_name":"SmartBlock","heading":"The three laws of TDD","lines":[2149,2158]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Testing#F.I.R.S.T. rules": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Testing#F.I.R.S.T. rules","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Testing#F.I.R.S.T. rules","embeddings":{},"text":null,"length":701,"class_name":"SmartBlock","heading":"F.I.R.S.T. rules","lines":[2159,2174]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Testing#Single concept per test": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Testing#Single concept per test","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Testing#Single concept per test","embeddings":{},"text":null,"length":1063,"class_name":"SmartBlock","heading":"Single concept per test","lines":[2175,2224]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Testing#The name of the test should reveal its intention": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Testing#The name of the test should reveal its intention","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Testing#The name of the test should reveal its intention","embeddings":{},"text":null,"length":434,"class_name":"SmartBlock","heading":"The name of the test should reveal its intention","lines":[2225,2258]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Concurrency#Prefer promises vs callbacks": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Concurrency#Prefer promises vs callbacks","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Concurrency#Prefer promises vs callbacks","embeddings":{},"text":null,"length":2511,"class_name":"SmartBlock","heading":"Prefer promises vs callbacks","lines":[2261,2329]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Concurrency#Async/Await are even cleaner than Promises": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Concurrency#Async/Await are even cleaner than Promises","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Concurrency#Async/Await are even cleaner than Promises","embeddings":{},"text":null,"length":1292,"class_name":"SmartBlock","heading":"Async/Await are even cleaner than Promises","lines":[2330,2377]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Error Handling": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Error Handling","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Error Handling","embeddings":{},"text":null,"length":290,"class_name":"SmartBlock","heading":"Error Handling","lines":[2378,2382]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Error Handling#Always use Error for throwing or rejecting": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Error Handling#Always use Error for throwing or rejecting","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Error Handling#Always use Error for throwing or rejecting","embeddings":{},"text":null,"length":1919,"class_name":"SmartBlock","heading":"Always use Error for throwing or rejecting","lines":[2383,2444]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Error Handling#Don't ignore caught errors{1}": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Error Handling#Don't ignore caught errors{1}","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Error Handling#Don't ignore caught errors{1}","embeddings":{},"text":null,"length":403,"class_name":"SmartBlock","heading":"Don't ignore caught errors","lines":[2445,2447]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Error Handling#Don't ignore caught errors{2}": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Error Handling#Don't ignore caught errors{2}","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Error Handling#Don't ignore caught errors{2}","embeddings":{},"text":null,"length":353,"class_name":"SmartBlock","heading":"Don't ignore caught errors","lines":[2448,2480]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Error Handling#Don't ignore rejected promises": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Error Handling#Don't ignore rejected promises","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Error Handling#Don't ignore rejected promises","embeddings":{},"text":null,"length":621,"class_name":"SmartBlock","heading":"Don't ignore rejected promises","lines":[2481,2521]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Formatting{1}": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Formatting{1}","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Formatting{1}","embeddings":{},"text":null,"length":340,"class_name":"SmartBlock","heading":"Formatting","lines":[2522,2524]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Formatting{2}": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Formatting{2}","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Formatting{2}","embeddings":{},"text":null,"length":833,"class_name":"SmartBlock","heading":"Formatting","lines":[2525,2535]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Formatting#Migrating from TSLint to ESLint": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Formatting#Migrating from TSLint to ESLint","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Formatting#Migrating from TSLint to ESLint","embeddings":{},"text":null,"length":158,"class_name":"SmartBlock","heading":"Migrating from TSLint to ESLint","lines":[2536,2539]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Formatting#Use consistent capitalization": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Formatting#Use consistent capitalization","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Formatting#Use consistent capitalization","embeddings":{},"text":null,"length":1181,"class_name":"SmartBlock","heading":"Use consistent capitalization","lines":[2540,2584]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Formatting#Function callers and callees should be close": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Formatting#Function callers and callees should be close","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Formatting#Function callers and callees should be close","embeddings":{},"text":null,"length":1562,"class_name":"SmartBlock","heading":"Function callers and callees should be close","lines":[2585,2673]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Formatting#Organize imports": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Formatting#Organize imports","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Formatting#Organize imports","embeddings":{},"text":null,"length":654,"class_name":"SmartBlock","heading":"Organize imports","lines":[2674,2683]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Formatting#Organize imports{1}": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Formatting#Organize imports{1}","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Formatting#Organize imports{1}","embeddings":{},"text":null,"length":1403,"class_name":"SmartBlock","heading":"Organize imports","lines":[2684,2722]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Formatting#Use typescript aliases": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Formatting#Use typescript aliases","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Formatting#Use typescript aliases","embeddings":{},"text":null,"length":526,"class_name":"SmartBlock","heading":"Use typescript aliases","lines":[2723,2756]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Comments": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Comments","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Comments","embeddings":{},"text":null,"length":198,"class_name":"SmartBlock","heading":"Comments","lines":[2757,2763]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Comments#Prefer self explanatory code instead of comments": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Comments#Prefer self explanatory code instead of comments","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Comments#Prefer self explanatory code instead of comments","embeddings":{},"text":null,"length":339,"class_name":"SmartBlock","heading":"Prefer self explanatory code instead of comments","lines":[2764,2783]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Comments#Don't leave commented out code in your codebase": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Comments#Don't leave commented out code in your codebase","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Comments#Don't leave commented out code in your codebase","embeddings":{},"text":null,"length":289,"class_name":"SmartBlock","heading":"Don't leave commented out code in your codebase","lines":[2784,2809]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Comments#Don't have journal comments": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Comments#Don't have journal comments","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Comments#Don't have journal comments","embeddings":{},"text":null,"length":550,"class_name":"SmartBlock","heading":"Don't have journal comments","lines":[2810,2837]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Comments#Avoid positional markers": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Comments#Avoid positional markers","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Comments#Avoid positional markers","embeddings":{},"text":null,"length":1458,"class_name":"SmartBlock","heading":"Avoid positional markers","lines":[2838,2899]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Comments#TODO comments": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Comments#TODO comments","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Comments#TODO comments","embeddings":{},"text":null,"length":732,"class_name":"SmartBlock","heading":"TODO comments","lines":[2900,2927]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Translations": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Translations","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Translations","embeddings":{},"text":null,"length":258,"class_name":"SmartBlock","heading":"Translations","lines":[2928,2931]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Translations{1}": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Translations{1}","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Translations{1}","embeddings":{},"text":null,"length":286,"class_name":"SmartBlock","heading":"Translations","lines":[2932,2934]}
"SmartBlock:brain cache/Tech/Coding/Clean Code - Typescript.md#Translations{2}": {"key":"brain cache/Tech/Coding/Clean Code - Typescript.md#Translations{2}","path":"brain cache/Tech/Coding/Clean Code - Typescript.md#Translations{2}","embeddings":{},"text":null,"length":1892,"class_name":"SmartBlock","heading":"Translations","lines":[2935,2949]}